//Bibliotecas
const Discord = require('discord.js');
const c = new Discord.Client();
const { corNeutra, corDer, corVic } = require('../../database/geral.json')
const { naves, canhoes, escudos, motores, geradores, catalisadores, extratores, trajes, armas, defesas, comidas, kitsReparo } = require('../../database/lojas.json')
c.perfil = require('../../database/perfil.json')

module.exports = {
    name: 'loja',
    aliases: ['shop'],
    description: 'Acesse as lojas do jogo',
    execute(msg) {
        const id = msg.author.id
        const Menu1 = new Discord.MessageEmbed()
            .setColor(corNeutra)
            .setTitle(`Loja`)
            .setDescription('Clique no emoji correspondente a √°rea de seu interesse')
            .addFields(
                { name: 'Espa√ßo:', value: `üá¶ Naves\nüáß Canh√µes\nüá® Escudos\nüá© Motores\nüá™ Geradores\nüá´ Catalisadores\nüá¨ Extratores`, inline: true },
                { name: 'Planetas:', value: `üá≠ Trajes\nüáÆ Armas\nüáØ Escudos`, inline: true },
                { name: 'Recursos e outros:', value: `üá∞ Comida\nüá± √Ågua\nüá≤ Kit de primeiros socorros\nüá≥ Fragmentos\nüá¥ Kit de reparo` }
            );



        msg.channel.send(Menu1).then(mes => {
            menuInicial(mes)
        })

        function menuInicial(mes) {

            mes.edit(Menu1).then(mes => {
                mes.react('üá¶');
                mes.react('üáß');
                mes.react('üá®');
                mes.react('üá©');
                mes.react('üá™');
                mes.react('üá´');
                mes.react('üá¨');
                mes.react('üá≠');
                mes.react('üáÆ');
                mes.react('üáØ');
                mes.react('üá∞');
                mes.react('üá±');
                mes.react('üá≤');
                mes.react('üá≥');
                mes.react('üá¥');

                const filter = (reaction, user) => {
                    return ['üá¶', 'üáß', 'üá®', 'üá©', 'üá™', 'üá´', 'üá¨', 'üá≠', 'üáÆ', 'üáØ', 'üá∞', 'üá±', 'üá≤', 'üá≥', 'üá¥'].includes(reaction.emoji.name) && user.id === id;
                }

                mes.awaitReactions(filter, { max: 1, time: 150000, errors: ['time'] }).then(collected => {
                    const reaction = collected.first();
                    const i = 0

                    if (reaction.emoji.name == 'üá¶') escolherNave(mes, 0)
                    if (reaction.emoji.name == 'üáß') escolherApendice(mes, 0, canhoes, 'canh√µes', 'Dano')
                    if (reaction.emoji.name == 'üá®') escolherApendice(mes, 0, escudos, 'escudos', 'Defesa')
                    if (reaction.emoji.name == 'üá©') escolherApendice(mes, 0, motores, 'motores', 'Velocidade')
                    if (reaction.emoji.name == 'üá™') escolherApendice(mes, 0, geradores, 'geradores', 'Gera√ß√£o')
                    if (reaction.emoji.name == 'üá´') escolherApendice(mes, 0, catalisadores, 'catalisadores', 'Filtragem')
                    if (reaction.emoji.name == 'üá¨') escolherApendice(mes, 0, extratores, 'extratores', 'Efici√™ncia')
                    if (reaction.emoji.name == 'üá≠') escolherTraje(mes, 0)
                    if (reaction.emoji.name == 'üáÆ') escolherApendice(mes, 0, armas, 'armas', 'Dano')
                    if (reaction.emoji.name == 'üáØ') escolherApendice(mes, 0, defesas, 'escudos port√°teis', 'Defesa')
                    if (reaction.emoji.name == 'üá∞') escolherComida(mes, 0)
                    if (reaction.emoji.name == 'üá±') escolherAgua(mes, 0)
                    if (reaction.emoji.name == 'üá≤') escolherKitSocorros(mes)
                    if (reaction.emoji.name == 'üá≥') menuInicial(mes)
                    if (reaction.emoji.name == 'üá¥') escolherKitReparo(mes,0)
                    mes.reactions.removeAll()
                })
            })
        }
        function escolherNave(mes, i) {

            const escolhido = new Discord.MessageEmbed()
                .setTitle('Loja')
                .setColor(corNeutra)
                .setDescription('Esta √© a ala de naves, veja detalhes sobre elas abaixo')
                .addFields(
                    { name: 'Nome', value: naves[i].nome },
                    { name: 'Valor', value: naves[i].valor, inline: true },
                    { name: 'Dano m√°ximo', value: naves[i].atkMax, inline: true },
                    { name: 'Defesa m√°xima', value: naves[i].defMax, inline: true },
                    { name: 'HP', value: naves[i].hp },
                    { name: 'Capacidade de energia', value: naves[i].energiaMax, inline: true },
                    { name: 'Capacidade de combust√≠vel', value: naves[i].combustivelMax, inline: true },
                    { name: 'Capacidade de oxig√™nio', value: naves[i].oxigenioMax, inline: true },
                    { name: 'Capacidade de √°gua', value: naves[i].aguaMax, inline: true }
                )
                .setFooter(`${i + 1}/${naves.length}`)
            mes.edit(escolhido).then(message => {
                message.react('‚Ü©Ô∏è');
                message.react('‚èÆ');
                message.react('üí≤');
                message.react('‚è≠');

                const filter = (reaction, user) => {
                    return ['‚Ü©Ô∏è', '‚èÆ', 'üí≤', '‚è≠'].includes(reaction.emoji.name) && user.id === id;
                }
                message.awaitReactions(filter, { max: 1, time: 150000, errors: ['time'] }).then(collected => {
                    const reaction = collected.first();

                    if (reaction.emoji.name == '‚Ü©Ô∏è') menuInicial(mes)
                    if (reaction.emoji.name == '‚èÆ') {
                        if (i == 0) escolherNave(mes, 0)
                        else escolherNave(mes, i - 1)
                    }
                    if (reaction.emoji.name == 'üí≤') comprar(mes, naves[i])
                    if (reaction.emoji.name == '‚è≠') {
                        if (i + 1 == naves.length) escolherNave(mes, naves.length - 1)
                        else escolherNave(mes, i + 1)
                    }
                    mes.reactions.removeAll()


                })
            })
        }
        function escolherTraje(mes, i) {

            const escolhido = new Discord.MessageEmbed()
                .setTitle('Loja')
                .setColor(corNeutra)
                .setDescription('Esta √© a ala de trajes, veja detalhes sobre eles abaixo')
                .addFields(
                    { name: 'Nome', value: trajes[i].nome },
                    { name: 'Valor', value: trajes[i].valor, inline: true },
                    { name: 'Dano m√°ximo', value: trajes[i].atkMax, inline: true },
                    { name: 'Defesa m√°xima', value: trajes[i].defMax, inline: true },
                    { name: 'Capacidade de energia', value: trajes[i].energiaMax, inline: true },
                    { name: 'Capacidade de oxig√™nio', value: trajes[i].oxigenioMax, inline: true }
                )
                .setFooter(`${i + 1}/${trajes.length}`)
            mes.edit(escolhido).then(message => {
                message.react('‚Ü©Ô∏è');
                message.react('‚èÆ');
                message.react('üí≤');
                message.react('‚è≠');

                const filter = (reaction, user) => {
                    return ['‚Ü©Ô∏è', '‚èÆ', 'üí≤', '‚è≠'].includes(reaction.emoji.name) && user.id === id;
                }
                message.awaitReactions(filter, { max: 1, time: 150000, errors: ['time'] }).then(collected => {
                    const reaction = collected.first();

                    if (reaction.emoji.name == '‚Ü©Ô∏è') menuInicial(mes)
                    if (reaction.emoji.name == '‚èÆ') {
                        if (i == 0) escolherTraje(mes, 0)
                        else escolherTraje(mes, i - 1)
                    }
                    if (reaction.emoji.name == 'üí≤') comprar(mes, trajes[i])
                    if (reaction.emoji.name == '‚è≠') {
                        if (i + 1 == trajes.length) escolherTraje(mes, trajes.length - 1)
                        else escolherTraje(mes, i + 1)
                    }
                    mes.reactions.removeAll()


                })
            })
        }
        function escolherApendice(mes, i, object, title, atributo) {
            const escolhido = new Discord.MessageEmbed()
                .setTitle('Loja')
                .setColor(corNeutra)
                .setDescription(`Esta √© a ala de ${title}, veja detalhes abaixo`).addFields(
                    { name: 'Nome', value: object[i].nome },
                    { name: 'Valor', value: object[i].valor, inline: true },
                    { name: atributo, value: object[i].att, inline: true }
                )
                .setFooter(`${i + 1}/${object.length}`)
            mes.edit(escolhido).then(message => {
                message.react('‚Ü©Ô∏è');
                message.react('‚èÆ');
                message.react('üí≤');
                message.react('‚è≠');

                const filter = (reaction, user) => {
                    return ['‚Ü©Ô∏è', '‚èÆ', 'üí≤', '‚è≠'].includes(reaction.emoji.name) && user.id === id;
                }
                message.awaitReactions(filter, { max: 1, time: 150000, errors: ['time'] }).then(collected => {
                    const reaction = collected.first();

                    if (reaction.emoji.name == '‚Ü©Ô∏è') menuInicial(mes)
                    if (reaction.emoji.name == '‚èÆ') {
                        if (i == 0) escolherApendice(mes, 0, object, title, atributo)
                        else escolherApendice(mes, i - 1, object, title, atributo)
                    }
                    if (reaction.emoji.name == 'üí≤') comprar(mes, object[i])
                    if (reaction.emoji.name == '‚è≠') {
                        if (i + 1 == object.length) escolherApendice(mes, object.length - 1, object, title, atributo)
                        else escolherApendice(mes, i + 1, object, title, atributo)
                    }
                    mes.reactions.removeAll()
                })
            })
        }
        function escolherComida(mes, i) {
            const escolhido = new Discord.MessageEmbed()
                .setTitle('Loja')
                .setColor(corNeutra)
                .setDescription(`Esta √© a ala de alimentos, veja detalhes abaixo`).addFields(
                    { name: 'Nome', value: comidas[i].nome },
                    { name: 'Valor', value: comidas[i].valor, inline: true },
                    { name: 'Alimenta√ß√£o', value: `Fome: ${comidas[i].fome}\nSede: ${comidas[i].sede}\nSono: ${comidas[i].sono}\nHP: ${comidas[i].hp}` }
                )
                .setFooter(`${i + 1}/${comidas.length}`)
            mes.edit(escolhido).then(message => {
                message.react('‚Ü©Ô∏è');
                message.react('‚èÆ');
                message.react('üí≤');
                message.react('‚è≠');

                const filter = (reaction, user) => {
                    return ['‚Ü©Ô∏è', '‚èÆ', 'üí≤', '‚è≠'].includes(reaction.emoji.name) && user.id === id;
                }
                message.awaitReactions(filter, { max: 1, time: 150000, errors: ['time'] }).then(collected => {
                    const reaction = collected.first();

                    if (reaction.emoji.name == '‚Ü©Ô∏è') menuInicial(mes)
                    if (reaction.emoji.name == '‚èÆ') {
                        if (i == 0) escolherComida(mes, 0)
                        else escolherComida(mes, i - 1)
                    }
                    if (reaction.emoji.name == 'üí≤') comprar(mes, comidas[i])
                    if (reaction.emoji.name == '‚è≠') {
                        if (i + 1 == comidas.length) escolherComida(mes, comidas.length - 1)
                        else escolherComida(mes, i + 1)
                    }
                    mes.reactions.removeAll()
                })
            })
        }
        function escolherAgua(mes, quantidade) {
            const escolhido = new Discord.MessageEmbed()
                .setTitle('Loja')
                .setColor(corNeutra)
                .setDescription(`Esta √© a ala de √°gua, veja detalhes abaixo`).addFields(
                    { name: '√Ågua', value: `(-) ${quantidade}üíß (+)\n$${quantidade} ü™ô` },
                );

            mes.edit(escolhido).then(message => {
                message.react('‚Ü©Ô∏è');
                message.react('‚ûñ');
                message.react('üí≤');
                message.react('‚ûï');

                const filter = (reaction, user) => {
                    return ['‚Ü©Ô∏è', '‚ûñ', 'üí≤', '‚ûï'].includes(reaction.emoji.name) && user.id === id;
                }
                message.awaitReactions(filter, { max: 1, time: 150000, errors: ['time'] }).then(collected => {
                    const reaction = collected.first();

                    if (reaction.emoji.name == '‚Ü©Ô∏è') menuInicial(mes)
                    if (reaction.emoji.name == '‚ûñ') {
                        if (quantidade < 10) escolherAgua(mes, 0)
                        else escolherAgua(mes, quantidade - 10)
                    }
                    if (reaction.emoji.name == 'üí≤') {
                        if (quantidade > c.perfil[id].money) {
                            const embed = new Discord.MessageEmbed()
                                .setColor(corDer)
                                .setTitle('Voc√™ n√£o tem dinheiro o suficiente')
                            mes.edit(embed)
                        } else {
                            const embed = new Discord.MessageEmbed()
                                .setColor(corVic)
                                .setTitle(`Voc√™ comprou ${quantidade} de √°gua`)
                                .setDescription(`O item foi adicionado ao seu invent√°rio`);
                            mes.edit(embed)
                            c.perfil[id].money -= quantidade
                            c.perfil[id].agua[1] += quantidade

                        }
                    }
                    if (reaction.emoji.name == '‚ûï') escolherAgua(mes, quantidade + 10)
                    mes.reactions.removeAll()
                })
            })
        }
        function escolherKitSocorros(mes) {
            const escolhido = new Discord.MessageEmbed()
                .setTitle('Loja')
                .setColor(corNeutra)
                .setDescription(`Esta √© a ala de kit de primeiros socorros, veja detalhes abaixo`).addFields(
                    { name: 'Kit de primeiros socorros', value: `Kit de primeiros socorros üíä\nHP: 100\nPre√ßo: $100 ü™ô` },
                );

            mes.edit(escolhido).then(message => {
                message.react('‚Ü©Ô∏è');
                message.react('üí≤');

                const filter = (reaction, user) => {
                    return ['‚Ü©Ô∏è', 'üí≤'].includes(reaction.emoji.name) && user.id === id;
                }
                message.awaitReactions(filter, { max: 1, time: 150000, errors: ['time'] }).then(collected => {
                    const reaction = collected.first();

                    if (reaction.emoji.name == '‚Ü©Ô∏è') menuInicial(mes);

                    if (reaction.emoji.name == 'üí≤') {
                        if (quantidade > c.perfil[id].money) {
                            const embed = new Discord.MessageEmbed()
                                .setColor(corDer)
                                .setTitle('Voc√™ n√£o tem dinheiro o suficiente')
                            mes.edit(embed)
                        } else {
                            const embed = new Discord.MessageEmbed()
                                .setColor(corVic)
                                .setTitle(`Voc√™ comprou Kit de primeiros socorros üíä`)
                                .setDescription(`O item foi adicionado ao seu invent√°rio`);
                            mes.edit(embed)
                            c.perfil[id].money -= 100
                            c.perfil[id].inventario.push(
                                {
                                    nome: 'Kit de primeiros socorros üíä',
                                    cat: 'consumivel',
                                    valor: 100,
                                    fome: 0,
                                    sede: 0,
                                    sono: 10,
                                    hp: 100

                                }
                            )
                        }
                    }
                    mes.reactions.removeAll()
                })
            })

        };
        function escolherFragmentos(mes) {

        }
        function escolherKitReparo(mes, i) {
            const escolhido = new Discord.MessageEmbed()
                .setTitle('Loja')
                .setColor(corNeutra)
                .setDescription(`Esta √© a ala de kits de reparo e upgrades, veja detalhes abaixo`).addFields(
                    { name: 'Nome', value: kitsReparo[i].nome },
                    { name: 'Valor', value: kitsReparo[i].valor }
                )
                .setFooter(`${i + 1}/${kitsReparo.length}`)
            mes.edit(escolhido).then(message => {
                message.react('‚Ü©Ô∏è');
                message.react('‚èÆ');
                message.react('üí≤');
                message.react('‚è≠');

                const filter = (reaction, user) => {
                    return ['‚Ü©Ô∏è', '‚èÆ', 'üí≤', '‚è≠'].includes(reaction.emoji.name) && user.id === id;
                }
                message.awaitReactions(filter, { max: 1, time: 150000, errors: ['time'] }).then(collected => {
                    const reaction = collected.first();

                    if (reaction.emoji.name == '‚Ü©Ô∏è') menuInicial(mes)
                    if (reaction.emoji.name == '‚èÆ') {
                        if (i == 0) escolherKitReparo(mes, 0)
                        else escolherKitReparo(mes, i - 1)
                    }
                    if (reaction.emoji.name == 'üí≤') comprar(mes, kitsReparo[i])
                    if (reaction.emoji.name == '‚è≠') {
                        if (i + 1 == kitsReparo.length) escolherKitReparo(mes, kitsReparo.length - 1)
                        else escolherKitReparo(mes, i + 1)
                    }
                    mes.reactions.removeAll()
                })
            })
        }
        function comprar(mes, object) {
            if (object.valor > c.perfil[id].money) {
                const embed = new Discord.MessageEmbed()
                    .setColor(corDer)
                    .setTitle('Voc√™ n√£o tem dinheiro o suficiente')
                mes.edit(embed)
            } else {
                const embed = new Discord.MessageEmbed()
                    .setColor(corVic)
                    .setTitle(`Voc√™ comprou ${object.nome}`)
                    .setDescription(`O item foi adicionado ao seu invent√°rio`);
                mes.edit(embed)
                c.perfil[id].money -= object.valor
                c.perfil[id].inventario.push(object)
            }
        }
    }
}